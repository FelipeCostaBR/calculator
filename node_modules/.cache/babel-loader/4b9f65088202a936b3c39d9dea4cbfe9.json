{"ast":null,"code":"var _jsxFileName = \"/Users/felipePC/Desktop/calculator/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPoint from 'react-point';\nimport './index.css';\nconst PointTarget = ReactPoint.PointTarget;\n\nclass AutoScalingText extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scale: 1\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      scale\n    } = this.state;\n    const node = this.node;\n    const parentNode = this.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({\n        scale: actualScale\n      });\n    } else if (scale < 1) {\n      this.setState({\n        scale: 1\n      });\n    }\n  }\n\n  render() {\n    const {\n      scale\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto-scaling-text\",\n      style: {\n        transform: `scale(${scale}, ${scale})`\n      },\n      ref: node => this.node = node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nclass CalculatorDisplay extends React.Component {\n  render() {\n    const {\n      value,\n      ...props\n    } = this.props;\n    const language = navigator.language || 'en-US';\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    }); // add back missing .0 in e.g 12.0\n\n    const match = value.match(/\\.\\d*?(0*)$/);\n    if (match) formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n      className: \"calculator-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(AutoScalingText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, formattedValue));\n  }\n\n}\n\nclass CalculatorKey extends React.component {\n  render() {\n    const {\n      onPress,\n      className,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/React.createElement(PointTarget, {\n      onPoint: onPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", Object.assign({\n      className: `calculator-key ${className}`\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nconst calculatorOperations = {\n  '/': (prevValue, nextValue) => prevValue / nextValue,\n  '*': (prevValue, nextValue) => prevValue * nextValue,\n  '+': (prevValue, nextValue) => prevValue + nextValue,\n  '-': (prevValue, nextValue) => prevValue - nextValue,\n  '=': (prevValue, nextValue) => nextValue\n};\n\nclass Calculator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: null,\n      displayValue: '0',\n      operator: null,\n      waitingForOperand: false\n    };\n\n    this.handleKeyDown = event => {\n      let {\n        key\n      } = event;\n      if (key === 'Enter') key = '=';\n\n      if (/\\d/.test(key)) {\n        event.preventDefault();\n        this.inputDigit(parseInt(key, 10));\n      } else if (key in CalculatorOperations) {\n        event.preventDefault();\n        this.performOperation(key);\n      } else if (key === '.') {\n        event.preventDefault();\n        this.inputDot();\n      } else if (key === '%') {\n        event.preventDefault();\n        this.inputPercent();\n      } else if (key === 'Backspace') {\n        event.preventDefault();\n        this.clearLastChar();\n      } else if (key === 'Clear') {\n        event.preventDefault();\n\n        if (this.state.displayValue !== '0') {\n          this.clearDisplay();\n        } else {\n          this.clearAll();\n        }\n      }\n    };\n  }\n\n  clearAll() {\n    this.setState({\n      value: null,\n      displayValue: '0',\n      operator: null,\n      waitingForOperand: false\n    });\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue: '0'\n    });\n  }\n\n  clearLastChar() {\n    const {\n      displayValue\n    } = this.state;\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || '0'\n    });\n  }\n\n  toggleSign() {\n    const {\n      displayValue\n    } = this.state;\n    const newValue = parseFloat(displayValue) * -1;\n    this.setState({\n      displayValue: String(newValue)\n    });\n  }\n\n  inputPercent() {\n    const {\n      displayValue\n    } = this.state;\n    const currentValue = parseFloat(displayValue);\n    if (currentValue === 0) return;\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, '');\n    const newValue = parseFloat(displayValue) / 100;\n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2))\n    });\n  }\n\n  inputDot() {\n    const {\n      displayValue\n    } = this.state;\n\n    if (!/\\./.test(displayValue)) {\n      this.setState({\n        displayValue: displayValue + '.',\n        waitingForOperand: false\n      });\n    }\n  }\n\n  inputDigit(digit) {\n    const {\n      displayValue,\n      waitingForOperand\n    } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false\n      });\n    } else {\n      this.setState({\n        displayValue: displayValue === '0' ? String(digit) : displayValue + digit\n      });\n    }\n  }\n\n  performOperation(nextOperator) {\n    const {\n      value,\n      displayValue,\n      operator\n    } = this.state;\n    const inputValue = parseFloat(displayValue);\n\n    if (value == null) {\n      this.setState({\n        value: inputValue\n      });\n    } else if (operator) {\n      const currentValue = value || 0;\n      const newValue = calculatorOperations[operator](currentValue, inputValue);\n      this.setState({\n        value: newValue,\n        displayValue: String(newValue)\n      });\n    }\n\n    this.setState({\n      waitingForOperand: true,\n      operator: nextOperator\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    const {\n      displayValue\n    } = this.state;\n    const clearText = clearDisplay ? 'c' : 'AC';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calculator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CalculatorDisplay, {\n      value: displayValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calculator-keypad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-keys\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"function-keys\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-clear\",\n      onPress: () => clearDisplay ? this.clearDisplay() : this.clearAll(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, \" \", clearText), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-sign\",\n      onPress: () => this.toggleSign(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, \"\\xB1\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-percent\",\n      onPress: () => this.inputPercent(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }, \"%\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"digit-keys\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-0\",\n      onPress: () => this.inputDigit(0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-dot\",\n      onPress: () => this.inputDot(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, \"\\u25CF\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-1\",\n      onPress: () => this.inputDigit(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-2\",\n      onPress: () => this.inputDigit(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-3\",\n      onPress: () => this.inputDigit(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-4\",\n      onPress: () => this.inputDigit(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-5\",\n      onPress: () => this.inputDigit(5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-6\",\n      onPress: () => this.inputDigit(6),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-7\",\n      onPress: () => this.inputDigit(7),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-8\",\n      onPress: () => this.inputDigit(8),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-9\",\n      onPress: () => this.inputDigit(9),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }, \"9\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"operator-keys\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-divide\",\n      onPress: () => this.performOperation('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }\n    }, \"\\xF7\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-multiply\",\n      onPress: () => this.performOperation('*'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, \"\\xD7\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-subtract\",\n      onPress: () => this.performOperation('-'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, \"\\u2212\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-add\",\n      onPress: () => this.performOperation('+'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(CalculatorKey, {\n      className: \"key-equals\",\n      onPress: () => this.performOperation('='),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, \"=\"))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Calculator, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 3\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["/Users/felipePC/Desktop/calculator/src/index.js"],"names":["React","ReactDOM","ReactPoint","PointTarget","AutoScalingText","Component","state","scale","componentDidUpdate","node","parentNode","availableWidth","offsetWidth","actualWidth","actualScale","setState","render","transform","props","children","CalculatorDisplay","value","language","navigator","formattedValue","parseFloat","toLocaleString","useGrouping","maximumFractionDigits","match","test","CalculatorKey","component","onPress","className","calculatorOperations","prevValue","nextValue","Calculator","displayValue","operator","waitingForOperand","handleKeyDown","event","key","preventDefault","inputDigit","parseInt","CalculatorOperations","performOperation","inputDot","inputPercent","clearLastChar","clearDisplay","clearAll","substring","length","toggleSign","newValue","String","currentValue","fixedDigits","replace","toFixed","digit","nextOperator","inputValue","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","clearText","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactPoint from 'react-point'\nimport './index.css';\n\nconst PointTarget = ReactPoint.PointTarget\n\nclass AutoScalingText extends React.Component {\n  state = {\n    scale: 1\n  }\n\n  componentDidUpdate() {\n    const { scale } = this.state\n\n    const node = this.node\n    const parentNode = this.parentNode\n\n    const availableWidth = parentNode.offsetWidth\n    const actualWidth = node.offsetWidth\n    const actualScale = availableWidth / actualWidth\n\n    if (scale === actualScale)\n      return\n\n    if (actualScale < 1) {\n      this.setState({ scale: actualScale })\n    } else if (scale < 1) {\n      this.setState({ scale: 1 })\n    }\n  }\n\n  render() {\n    const { scale } = this.state\n\n    return (\n      <div className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale}, ${scale})` }}\n        ref={node => this.node = node}\n      >{this.props.children}\n      </div>\n    )\n  }\n}\n\nclass CalculatorDisplay extends React.Component {\n  render() {\n    const { value, ...props } = this.props\n\n    const language = navigator.language || 'en-US'\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    })\n\n    // add back missing .0 in e.g 12.0\n    const match = value.match(/\\.\\d*?(0*)$/)\n\n    if (match)\n      formattedValue += (/[1-9]/).test(match[0]) ? match[1] : match[0]\n\n    return (\n      <div {...props} className=\"calculator-display\">\n        <AutoScalingText>{formattedValue}</AutoScalingText>\n      </div>\n    )\n  }\n}\n\nclass CalculatorKey extends React.component {\n  render() {\n    const { onPress, className, ...props } = this.props\n\n    return (\n      <PointTarget onPoint={onPress}>\n        <button className={`calculator-key ${className}`} {...props} />\n      </PointTarget>\n    )\n  }\n}\n\nconst calculatorOperations = {\n  '/': (prevValue, nextValue) => prevValue / nextValue,\n  '*': (prevValue, nextValue) => prevValue * nextValue,\n  '+': (prevValue, nextValue) => prevValue + nextValue,\n  '-': (prevValue, nextValue) => prevValue - nextValue,\n  '=': (prevValue, nextValue) => nextValue\n}\n\nclass Calculator extends React.Component {\n  state = {\n    value: null,\n    displayValue: '0',\n    operator: null,\n    waitingForOperand: false\n  };\n\n  clearAll() {\n    this.setState({\n      value: null,\n      displayValue: '0',\n      operator: null,\n      waitingForOperand: false\n    })\n  }\n\n  clearDisplay() {\n    this.setState({\n      displayValue: '0'\n    })\n  }\n\n  clearLastChar() {\n    const { displayValue } = this.state\n\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || '0'\n    })\n  }\n\n  toggleSign() {\n    const { displayValue } = this.state\n    const newValue = parseFloat(displayValue) * -1\n\n    this.setState({\n      displayValue: String(newValue)\n    })\n  }\n\n  inputPercent() {\n    const { displayValue } = this.state\n    const currentValue = parseFloat(displayValue)\n    \n    if (currentValue === 0)\n      return\n    \n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, '')\n    const newValue = parseFloat(displayValue) / 100\n    \n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2))\n    })\n  }\n\n  inputDot() {\n    const { displayValue } = this.state\n\n    if (!(/\\./).test(displayValue)) {\n      this.setState({\n        displayValue: displayValue + '.',\n        waitingForOperand: false\n      })\n    }\n  }\n\n  inputDigit(digit) {\n    const { displayValue, waitingForOperand } = this.state\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false\n      })\n    } else {\n      this.setState({\n        displayValue: displayValue === '0' ? String(digit) : displayValue + digit\n      })\n    }\n  }\n\n  performOperation(nextOperator) {\n    const { value, displayValue, operator } = this.state\n    const inputValue = parseFloat(displayValue)\n\n    if (value == null) {\n      this.setState({\n        value: inputValue\n      })\n    } else if (operator) {\n      const currentValue = value || 0\n      const newValue = calculatorOperations[operator](currentValue, inputValue)\n\n      this.setState({\n        value: newValue,\n        displayValue: String(newValue)\n      })\n    }\n\n    this.setState({\n      waitingForOperand: true,\n      operator: nextOperator\n    })\n  };\n\n  handleKeyDown = (event) => {\n    let { key } = event\n\n    if (key === 'Enter')\n      key = '='\n\n    if ((/\\d/).test(key)) {\n      event.preventDefault()\n      this.inputDigit(parseInt(key, 10))\n    } else if (key in CalculatorOperations) {\n      event.preventDefault()\n      this.performOperation(key)\n    } else if (key === '.') {\n      event.preventDefault()\n      this.inputDot()\n    } else if (key === '%') {\n      event.preventDefault()\n      this.inputPercent()\n    } else if (key === 'Backspace') {\n      event.preventDefault()\n      this.clearLastChar()\n    } else if (key === 'Clear') {\n      event.preventDefault()\n\n      if (this.state.displayValue !== '0') {\n        this.clearDisplay()\n      } else {\n        this.clearAll()\n      }\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  render() {\n    const { displayValue } = this.state\n    const clearText = clearDisplay ? 'c' : 'AC'\n\n    return (\n      <div className=\"calculator\">\n        <CalculatorDisplay value={displayValue} />\n        <div className=\"calculator-keypad\">\n          <div className=\"input-keys\">\n            <div className=\"function-keys\">\n              <CalculatorKey\n                className=\"key-clear\"\n                onPress={() => clearDisplay ? this.clearDisplay() : this.clearAll()} > {clearText}\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-sign\"\n                onPress={() => this.toggleSign()}>±\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-percent\"\n                onPress={() => this.inputPercent()}>%\n              </CalculatorKey>\n            </div>\n            <div className=\"digit-keys\">\n              <CalculatorKey className=\"key-0\" onPress={() => this.inputDigit(0)}>0</CalculatorKey>\n              <CalculatorKey className=\"key-dot\" onPress={() => this.inputDot()}>●</CalculatorKey>\n              <CalculatorKey className=\"key-1\" onPress={() => this.inputDigit(1)}>1</CalculatorKey>\n              <CalculatorKey className=\"key-2\" onPress={() => this.inputDigit(2)}>2</CalculatorKey>\n              <CalculatorKey className=\"key-3\" onPress={() => this.inputDigit(3)}>3</CalculatorKey>\n              <CalculatorKey className=\"key-4\" onPress={() => this.inputDigit(4)}>4</CalculatorKey>\n              <CalculatorKey className=\"key-5\" onPress={() => this.inputDigit(5)}>5</CalculatorKey>\n              <CalculatorKey className=\"key-6\" onPress={() => this.inputDigit(6)}>6</CalculatorKey>\n              <CalculatorKey className=\"key-7\" onPress={() => this.inputDigit(7)}>7</CalculatorKey>\n              <CalculatorKey className=\"key-8\" onPress={() => this.inputDigit(8)}>8</CalculatorKey>\n              <CalculatorKey className=\"key-9\" onPress={() => this.inputDigit(9)}>9</CalculatorKey>\n            </div>\n          </div>\n          <div className=\"operator-keys\">\n            <CalculatorKey className=\"key-divide\" onPress={() => this.performOperation('/')}>÷</CalculatorKey>\n            <CalculatorKey className=\"key-multiply\" onPress={() => this.performOperation('*')}>×</CalculatorKey>\n            <CalculatorKey className=\"key-subtract\" onPress={() => this.performOperation('-')}>−</CalculatorKey>\n            <CalculatorKey className=\"key-add\" onPress={() => this.performOperation('+')}>+</CalculatorKey>\n            <CalculatorKey className=\"key-equals\" onPress={() => this.performOperation('=')}>=</CalculatorKey>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <Calculator />,\n  document.getElementById('app')\n);\n\n"]},"metadata":{},"sourceType":"module"}
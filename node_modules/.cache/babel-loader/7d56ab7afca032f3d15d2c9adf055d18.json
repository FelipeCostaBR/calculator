{"ast":null,"code":"var _jsxFileName = \"/Users/felipePC/Desktop/calculator/src/App.js\";\nimport React from 'react';\nimport PointTarget from 'react-point';\nimport './App.css'; //const PointTarget = ReactPoint.PointTarget\n\nclass AutoScalingText extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scale: 1\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      scale\n    } = this.state;\n    const node = this.node;\n    const parentNode = this.parentNode;\n    const availableWidth = parentNode.offsetWidth;\n    const actualWidth = node.offsetWidth;\n    const actualScale = availableWidth / actualWidth;\n    if (scale === actualScale) return;\n\n    if (actualScale < 1) {\n      this.setState({\n        scale: actualScale\n      });\n    } else if (scale < 1) {\n      this.setState({\n        scale: 1\n      });\n    }\n  }\n\n  render() {\n    const {\n      scale\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto-scaling-text\",\n      style: {\n        transform: `scale(${scale}, ${scale})`\n      },\n      ref: node => this.node = node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nclass CalculatorDisplay extends React.Component {\n  render() {\n    const {\n      value,\n      ...props\n    } = this.props;\n    const language = navigator.language || 'en-US';\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    }); // add back missing .0 in e.g 12.0\n\n    const match = value.match(/\\.\\d*?(0*)$/);\n    if (match) formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n      className: \"calculator-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(AutoScalingText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, formattedValue));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"  teste\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/felipePC/Desktop/calculator/src/App.js"],"names":["React","PointTarget","AutoScalingText","Component","state","scale","componentDidUpdate","node","parentNode","availableWidth","offsetWidth","actualWidth","actualScale","setState","render","transform","props","children","CalculatorDisplay","value","language","navigator","formattedValue","parseFloat","toLocaleString","useGrouping","maximumFractionDigits","match","test","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAO,WAAP,C,CAEA;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC5CC,KAD4C,GACpC;AACNC,MAAAA,KAAK,EAAE;AADD,KADoC;AAAA;;AAK5CC,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAED,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,UAAMG,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAMC,UAAU,GAAG,KAAKA,UAAxB;AAEA,UAAMC,cAAc,GAAGD,UAAU,CAACE,WAAlC;AACA,UAAMC,WAAW,GAAGJ,IAAI,CAACG,WAAzB;AACA,UAAME,WAAW,GAAGH,cAAc,GAAGE,WAArC;AAEA,QAAIN,KAAK,KAAKO,WAAd,EACE;;AAEF,QAAIA,WAAW,GAAG,CAAlB,EAAqB;AACnB,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEO;AAAT,OAAd;AACD,KAFD,MAEO,IAAIP,KAAK,GAAG,CAAZ,EAAe;AACpB,WAAKQ,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;AACF;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AACE,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAG,SAAQV,KAAM,KAAIA,KAAM;AAAtC,OADT;AAEE,MAAA,GAAG,EAAEE,IAAI,IAAI,KAAKA,IAAL,GAAYA,IAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,KAAKS,KAAL,CAAWC,QAHb,CADF;AAOD;;AAnC2C;;AAsC9C,MAAMC,iBAAN,SAAgClB,KAAK,CAACG,SAAtC,CAAgD;AAC9CW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEK,MAAAA,KAAF;AAAS,SAAGH;AAAZ,QAAsB,KAAKA,KAAjC;AAEA,UAAMI,QAAQ,GAAGC,SAAS,CAACD,QAAV,IAAsB,OAAvC;AACA,QAAIE,cAAc,GAAGC,UAAU,CAACJ,KAAD,CAAV,CAAkBK,cAAlB,CAAiCJ,QAAjC,EAA2C;AAC9DK,MAAAA,WAAW,EAAE,IADiD;AAE9DC,MAAAA,qBAAqB,EAAE;AAFuC,KAA3C,CAArB,CAJO,CASP;;AACA,UAAMC,KAAK,GAAGR,KAAK,CAACQ,KAAN,CAAY,aAAZ,CAAd;AAEA,QAAIA,KAAJ,EACEL,cAAc,IAAK,OAAD,CAAUM,IAAV,CAAeD,KAAK,CAAC,CAAD,CAApB,IAA2BA,KAAK,CAAC,CAAD,CAAhC,GAAsCA,KAAK,CAAC,CAAD,CAA7D;AAEF,wBACE,6CAASX,KAAT;AAAgB,MAAA,SAAS,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBM,cAAlB,CADF,CADF;AAKD;;AArB6C;;AAyBhD,SAASO,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAID;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport PointTarget from 'react-point'\nimport './App.css';\n\n//const PointTarget = ReactPoint.PointTarget\n\nclass AutoScalingText extends React.Component {\n  state = {\n    scale: 1\n  }\n  \n  componentDidUpdate() {\n    const { scale } = this.state\n\n    const node = this.node\n    const parentNode = this.parentNode\n\n    const availableWidth = parentNode.offsetWidth\n    const actualWidth = node.offsetWidth\n    const actualScale = availableWidth / actualWidth\n\n    if (scale === actualScale)\n      return\n\n    if (actualScale < 1) {\n      this.setState({ scale: actualScale })\n    } else if (scale < 1) {\n      this.setState({ scale: 1 })\n    }\n  }\n\n  render() {\n    const { scale } = this.state\n\n    return (\n      <div className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale}, ${scale})` }}\n        ref={node => this.node = node}\n      >{this.props.children}\n      </div>\n    )\n  }\n}\n\nclass CalculatorDisplay extends React.Component {\n  render() {\n    const { value, ...props } = this.props\n\n    const language = navigator.language || 'en-US'\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    })\n\n    // add back missing .0 in e.g 12.0\n    const match = value.match(/\\.\\d*?(0*)$/)\n\n    if (match)\n      formattedValue += (/[1-9]/).test(match[0]) ? match[1] : match[0]\n\n    return (\n      <div {...props} className=\"calculator-display\">\n        <AutoScalingText>{formattedValue}</AutoScalingText>\n      </div>\n    )\n  }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">  teste\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
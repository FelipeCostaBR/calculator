{"ast":null,"code":"import _classCallCheck from\"/Users/felipePC/Desktop/javascript-basic-projects/calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/felipePC/Desktop/javascript-basic-projects/calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/felipePC/Desktop/javascript-basic-projects/calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/felipePC/Desktop/javascript-basic-projects/calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';//import ReactDOM from 'react-dom'\nimport ReactPoint from'react-point';var PointTarget=ReactPoint.PointTarget;var AutoScalingText=/*#__PURE__*/function(_React$Component){_inherits(AutoScalingText,_React$Component);var _super=_createSuper(AutoScalingText);function AutoScalingText(){var _this;_classCallCheck(this,AutoScalingText);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={scale:1};return _this;}_createClass(AutoScalingText,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){var scale=this.state.scale;var node=this.node;var parentNode=node.parentNode;var availableWidth=parentNode.offsetWidth;var actualWidth=node.offsetWidth;var actualScale=availableWidth/actualWidth;if(scale===actualScale)return;if(actualScale<1){this.setState({scale:actualScale});}else if(scale<1){this.setState({scale:1});}}},{key:\"render\",value:function render(){var _this2=this;var scale=this.state.scale;return/*#__PURE__*/React.createElement(\"div\",{className:\"auto-scaling-text\",style:{transform:\"scale(\".concat(scale,\",\").concat(scale,\")\")},ref:function ref(node){return _this2.node=node;}},this.props.children);}}]);return AutoScalingText;}(React.Component);export default AutoScalingText;","map":{"version":3,"sources":["/Users/felipePC/Desktop/javascript-basic-projects/calculator/src/components/AutoScalingText.js"],"names":["React","ReactPoint","PointTarget","AutoScalingText","state","scale","node","parentNode","availableWidth","offsetWidth","actualWidth","actualScale","setState","transform","props","children","Component"],"mappings":"4rBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CAGA,GAAMC,CAAAA,WAAW,CAAGD,UAAU,CAACC,WAA/B,C,GAEMC,CAAAA,e,2WACJC,K,CAAQ,CACNC,KAAK,CAAE,CADD,C,0GAIa,IACXA,CAAAA,KADW,CACD,KAAKD,KADJ,CACXC,KADW,CAGnB,GAAMC,CAAAA,IAAI,CAAG,KAAKA,IAAlB,CACA,GAAMC,CAAAA,UAAU,CAAGD,IAAI,CAACC,UAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAGD,UAAU,CAACE,WAAlC,CACA,GAAMC,CAAAA,WAAW,CAAGJ,IAAI,CAACG,WAAzB,CACA,GAAME,CAAAA,WAAW,CAAGH,cAAc,CAAGE,WAArC,CAEA,GAAIL,KAAK,GAAKM,WAAd,CACE,OAEF,GAAIA,WAAW,CAAG,CAAlB,CAAqB,CACnB,KAAKC,QAAL,CAAc,CAAEP,KAAK,CAAEM,WAAT,CAAd,EACD,CAFD,IAEO,IAAIN,KAAK,CAAG,CAAZ,CAAe,CACpB,KAAKO,QAAL,CAAc,CAAEP,KAAK,CAAE,CAAT,CAAd,EACD,CACF,C,uCAEQ,oBACCA,CAAAA,KADD,CACW,KAAKD,KADhB,CACCC,KADD,CAGP,mBACE,2BACE,SAAS,CAAC,mBADZ,CAEE,KAAK,CAAE,CAAEQ,SAAS,iBAAWR,KAAX,aAAoBA,KAApB,KAAX,CAFT,CAGE,GAAG,CAAE,aAAAC,IAAI,QAAI,CAAA,MAAI,CAACA,IAAL,CAAYA,IAAhB,EAHX,EAIE,KAAKQ,KAAL,CAAWC,QAJb,CADF,CAOD,C,6BAnC2Bf,KAAK,CAACgB,S,EAsCpC,cAAeb,CAAAA,eAAf","sourcesContent":["import React from 'react'\n//import ReactDOM from 'react-dom'\nimport ReactPoint from 'react-point'\n\n\nconst PointTarget = ReactPoint.PointTarget\n\nclass AutoScalingText extends React.Component {\n  state = {\n    scale: 1\n  };\n  \n  componentDidUpdate() {\n    const { scale } = this.state\n    \n    const node = this.node\n    const parentNode = node.parentNode\n    \n    const availableWidth = parentNode.offsetWidth\n    const actualWidth = node.offsetWidth\n    const actualScale = availableWidth / actualWidth\n    \n    if (scale === actualScale)\n      return\n    \n    if (actualScale < 1) {\n      this.setState({ scale: actualScale })\n    } else if (scale < 1) {\n      this.setState({ scale: 1 })\n    }\n  }\n  \n  render() {\n    const { scale } = this.state\n    \n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale},${scale})` }}\n        ref={node => this.node = node}\n      >{this.props.children}</div>\n    )\n  }\n}\n\nexport default AutoScalingText;"]},"metadata":{},"sourceType":"module"}
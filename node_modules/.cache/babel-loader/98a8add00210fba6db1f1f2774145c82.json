{"ast":null,"code":"var _jsxFileName = \"/Users/felipePC/Desktop/calculator/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PointTarget from 'react-point';\nimport './index.css';\nimport AutoScalingText from './components/AutoScalingText';\n\nclass CalculatorDisplay extends React.Component {\n  render() {\n    const {\n      value,\n      ...props\n    } = this.props;\n    const language = navigator.language || 'en-US';\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    }); // Add back missing .0 in e.g. 12.0\n\n    const match = value.match(/\\.\\d*?(0*)$/);\n    if (match) formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n      className: \"calculator-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(AutoScalingText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, formattedValue));\n  }\n\n}\n\nclass CalculatorKey extends React.Component {\n  render() {\n    const {\n      onPress,\n      className,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/React.createElement(PointTarget, {\n      onPoint: onPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", Object.assign({\n      className: `calculator-key ${className}`\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nconst CalculatorOperations = {\n  '/': (prevValue, nextValue) => prevValue / nextValue,\n  '*': (prevValue, nextValue) => prevValue * nextValue,\n  '+': (prevValue, nextValue) => prevValue + nextValue,\n  '-': (prevValue, nextValue) => prevValue - nextValue,\n  '=': (prevValue, nextValue) => nextValue\n};\nReactDOM.render( /*#__PURE__*/React.createElement(Calculator, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["/Users/felipePC/Desktop/calculator/src/index.js"],"names":["React","ReactDOM","PointTarget","AutoScalingText","CalculatorDisplay","Component","render","value","props","language","navigator","formattedValue","parseFloat","toLocaleString","useGrouping","maximumFractionDigits","match","test","CalculatorKey","onPress","className","CalculatorOperations","prevValue","nextValue","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;AAGA,MAAMC,iBAAN,SAAgCJ,KAAK,CAACK,SAAtC,CAAgD;AAC9CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAAS,SAAGC;AAAZ,QAAsB,KAAKA,KAAjC;AAEA,UAAMC,QAAQ,GAAGC,SAAS,CAACD,QAAV,IAAsB,OAAvC;AACA,QAAIE,cAAc,GAAGC,UAAU,CAACL,KAAD,CAAV,CAAkBM,cAAlB,CAAiCJ,QAAjC,EAA2C;AAC9DK,MAAAA,WAAW,EAAE,IADiD;AAE9DC,MAAAA,qBAAqB,EAAE;AAFuC,KAA3C,CAArB,CAJO,CASP;;AACA,UAAMC,KAAK,GAAGT,KAAK,CAACS,KAAN,CAAY,aAAZ,CAAd;AAEA,QAAIA,KAAJ,EACEL,cAAc,IAAK,OAAD,CAAUM,IAAV,CAAeD,KAAK,CAAC,CAAD,CAApB,IAA2BA,KAAK,CAAC,CAAD,CAAhC,GAAsCA,KAAK,CAAC,CAAD,CAA7D;AAEF,wBACE,6CAASR,KAAT;AAAgB,MAAA,SAAS,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBG,cAAlB,CADF,CADF;AAKD;;AArB6C;;AAwBhD,MAAMO,aAAN,SAA4BlB,KAAK,CAACK,SAAlC,CAA4C;AAC1CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEa,MAAAA,OAAF;AAAWC,MAAAA,SAAX;AAAsB,SAAGZ;AAAzB,QAAmC,KAAKA,KAA9C;AAEA,wBACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEW,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAG,kBAAiBC,SAAU;AAA/C,OAAsDZ,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AATyC;;AAY5C,MAAMa,oBAAoB,GAAG;AAC3B,OAAK,CAACC,SAAD,EAAYC,SAAZ,KAA0BD,SAAS,GAAGC,SADhB;AAE3B,OAAK,CAACD,SAAD,EAAYC,SAAZ,KAA0BD,SAAS,GAAGC,SAFhB;AAG3B,OAAK,CAACD,SAAD,EAAYC,SAAZ,KAA0BD,SAAS,GAAGC,SAHhB;AAI3B,OAAK,CAACD,SAAD,EAAYC,SAAZ,KAA0BD,SAAS,GAAGC,SAJhB;AAK3B,OAAK,CAACD,SAAD,EAAYC,SAAZ,KAA0BA;AALJ,CAA7B;AAUAtB,QAAQ,CAACK,MAAT,eACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEkB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PointTarget from 'react-point'\nimport './index.css';\nimport AutoScalingText from './components/AutoScalingText'\n\n\nclass CalculatorDisplay extends React.Component {\n  render() {\n    const { value, ...props } = this.props\n    \n    const language = navigator.language || 'en-US'\n    let formattedValue = parseFloat(value).toLocaleString(language, {\n      useGrouping: true,\n      maximumFractionDigits: 6\n    })\n    \n    // Add back missing .0 in e.g. 12.0\n    const match = value.match(/\\.\\d*?(0*)$/)\n    \n    if (match)\n      formattedValue += (/[1-9]/).test(match[0]) ? match[1] : match[0]\n    \n    return (\n      <div {...props} className=\"calculator-display\">\n        <AutoScalingText>{formattedValue}</AutoScalingText>\n      </div>\n    )\n  }\n}\n\nclass CalculatorKey extends React.Component {\n  render() {\n    const { onPress, className, ...props } = this.props\n    \n    return (\n      <PointTarget onPoint={onPress}>\n        <button className={`calculator-key ${className}`} {...props}/>\n      </PointTarget>\n    )\n  }\n}\n\nconst CalculatorOperations = {\n  '/': (prevValue, nextValue) => prevValue / nextValue,\n  '*': (prevValue, nextValue) => prevValue * nextValue,\n  '+': (prevValue, nextValue) => prevValue + nextValue,\n  '-': (prevValue, nextValue) => prevValue - nextValue,\n  '=': (prevValue, nextValue) => nextValue\n}\n\n\n\nReactDOM.render(\n  <Calculator/>,\n  document.getElementById('app')\n)"]},"metadata":{},"sourceType":"module"}